<Window x:Class="DGJv3.DGJWindow"
        x:ClassModifier="internal"
        Name="DGJRootWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:naudiowave="clr-namespace:NAudio.Wave;assembly=NAudio"
        xmlns:local="clr-namespace:DGJv3"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        Closing="Window_Closing"
        Title="点歌姬" Height="550" Width="830">
    <Window.Resources>
        <ResourceDictionary>
            <s:Boolean x:Key="True">True</s:Boolean>
            <s:Boolean x:Key="False">False</s:Boolean>
            <s:Int32 x:Key="Zero">0</s:Int32>
            <local:BlackListTypeStringConverter x:Key="BlackListTypeStringConverter"/>
            <local:SongStatusStringConverter x:Key="SongStatusStringConverter"/>
            <local:EqualsVisibilityConverter x:Key="EqualsVisibilityConverter"/>
            <local:PlayerVolumeConverter x:Key="PlayerVolumeConverter"/>
            <local:NotEqualsVisibilityConverter x:Key="NotEqualsVisibilityConverter"/>
            <local:IsNullToBooleanConverter x:Key="IsNullToBooleanConverter" />
            <!--<local:PalyModeConverter x:Key="PalyModeConverter"/>-->
            <!--<x:Type TypeName="local:PlayMode" x:Key="PlayMode"/>-->
            <Style TargetType="TextBox">
                <Setter Property="ContextMenuService.IsEnabled" Value="False"/>
            </Style>
            <Style x:Key="list_OutputInfo_itemstyle" TargetType="{x:Type ListViewItem}">
                <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                <EventSetter Event="KeyDown" Handler="ListViewItem_KeyDown" />
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.DeepOrange.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <materialDesign:DialogHost>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="60"/>
                <RowDefinition Height="100"/>
            </Grid.RowDefinitions>

            <!-- 播放列表 & 歌词 开始 -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="110"/>
                </Grid.RowDefinitions>

                <ListView ItemsSource="{Binding Songs}">
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="移除" Command="{Binding RemoveSongCommmand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Eraser"></materialDesign:PackIcon>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="移除并将歌曲ID加入黑名单" Command="{Binding RemoveAndBlacklistSongCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="BlockHelper"></materialDesign:PackIcon>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.View>
                        <GridView AllowsColumnReorder="False">
                            <GridViewColumn Header="状态" DisplayMemberBinding="{Binding Status,Converter={StaticResource SongStatusStringConverter}}"/>
                            <GridViewColumn Header="歌名" DisplayMemberBinding="{Binding SongName, Mode=OneTime}"/>
                            <GridViewColumn Header="点歌人" DisplayMemberBinding="{Binding UserName, Mode=OneTime}"/>
                            <GridViewColumn Header="歌手" DisplayMemberBinding="{Binding SingersText, Mode=OneTime}"/>
                        </GridView>
                    </ListView.View>
                </ListView>

                <materialDesign:Card Grid.Row="1" Margin="8,0" VerticalAlignment="Stretch">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin" Value="7,0"/>
                                <Setter Property="FontSize" Value="18"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding Player.CurrentLyric}"/>
                        <TextBlock Text="{Binding Player.UpcomingLyric}" Grid.Row="1"/>
                    </Grid>
                </materialDesign:Card>

            </Grid>
            <!-- 播放列表 & 歌词 结束 -->

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="空闲歌单">
                        <ListView Name="Songlist_listView" ItemsSource="{Binding Playlist}" Margin="-5" Grid.Row="1">
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="播放" Command="{Binding PlaySongInPlaylistCommmand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}">
                                        <MenuItem.Icon>
                                            <materialDesign:PackIcon Kind="Play"></materialDesign:PackIcon>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="移除" Command="{Binding RemovePlaylistInfoCommmand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}">
                                        <MenuItem.Icon>
                                            <materialDesign:PackIcon Kind="Delete"></materialDesign:PackIcon>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="清空全部" Command="{Binding ClearPlaylistCommand}">
                                        <MenuItem.Icon>
                                            <materialDesign:PackIcon Kind="Broom"></materialDesign:PackIcon>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <GridViewColumn Header="状态">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <materialDesign:PackIcon Width="20" Height="20" Kind="VolumeHigh"
                                                 Visibility="{Binding IsPlaying,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource TrueValue}}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="歌名" DisplayMemberBinding="{Binding Name, Mode=OneTime}"/>
                                    <GridViewColumn Header="歌手" DisplayMemberBinding="{Binding SingersText, Mode=OneTime}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </GroupBox>
                    <Grid Margin="3" Grid.Column="0" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Column="0" Margin="0,0,10,0" x:Name="SearchBox" Style="{StaticResource MaterialDesignTextBox}" KeyDown="SearchBox_KeyDown" VerticalAlignment="Center"
                                 materialDesign:HintAssist.Hint="输入歌手/歌曲,按回车或右侧按钮搜索列表" >
                        </TextBox>
                        <Button Grid.Column="1" Margin="0,0,10,0" Command="{Binding SearchInPlayListCommand}" VerticalAlignment="Center" Cursor="Hand">
                            <materialDesign:PackIcon Kind="Magnify"/>
                        </Button>
                        <Button Grid.Column="2" Margin="0,0,0,0" Command="{Binding NavigatePlayingSongInPlaylistCommand}" VerticalAlignment="Center" Cursor="Hand">
                            <materialDesign:PackIcon Kind="target"/>
                        </Button>
                    </Grid>
                </Grid>
                <StackPanel Margin="5" Grid.Row="1" Orientation="Horizontal">
                    <Button HorizontalAlignment="Center" VerticalAlignment="Center"
                        Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                        materialDesign:DialogHost.DialogClosingAttached="DialogAddSongs" Cursor="Hand">
                        <Button.CommandParameter>
                            <StackPanel Margin="16">
                                <TextBlock FontSize="16">歌名</TextBlock>
                                <TextBox x:Name="AddSongsTextBox" Style="{StaticResource MaterialDesignTextBox}"></TextBox>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="{StaticResource True}"
                                    HorizontalAlignment="Center">
                                        确定
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="{StaticResource False}"
                                    HorizontalAlignment="Center">
                                        取消
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </Button.CommandParameter>
                        点歌
                    </Button>
                    <Button HorizontalAlignment="Center" VerticalAlignment="Center"
                        Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                        materialDesign:DialogHost.DialogClosingAttached="DialogAddSongsToPlaylist" Cursor="Hand">
                        <Button.CommandParameter>
                            <StackPanel Margin="16">
                                <TextBlock FontSize="16">歌名</TextBlock>
                                <TextBox x:Name="AddSongPlaylistTextBox" Style="{StaticResource MaterialDesignTextBox}"></TextBox>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="{StaticResource True}"
                                    HorizontalAlignment="Center">
                                        确定
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="{StaticResource False}"
                                    HorizontalAlignment="Center">
                                        取消
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </Button.CommandParameter>
                        添加空闲歌曲
                    </Button>
                    <Button HorizontalAlignment="Center" VerticalAlignment="Center"
                        Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                        materialDesign:DialogHost.DialogClosingAttached="DialogAddPlaylist"  Cursor="Hand">
                        <Button.CommandParameter>
                            <StackPanel Margin="16">
                                <TextBlock FontSize="16">
                                    歌单ID<LineBreak/>
                                    (在你网页浏览你的歌单时，可以在网址栏看到一长串数字，那就是歌单ID啦）
                                </TextBlock>
                                <TextBox x:Name="AddPlaylistTextBox" Style="{StaticResource MaterialDesignTextBox}"></TextBox>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="{StaticResource True}"
                                    HorizontalAlignment="Center">
                                        确定
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="{StaticResource False}"
                                    HorizontalAlignment="Center">
                                        取消
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </Button.CommandParameter>
                        添加空闲歌单
                    </Button>
                </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="5" Grid.Row="2">
                    <ComboBox ItemsSource="{Binding SearchModules.Modules}" Margin="5" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          SelectedValue="{Binding SearchModules.PrimaryModule}" DisplayMemberPath="ModuleName"
                          materialDesign:HintAssist.Hint="首选歌曲搜索引擎"/>
                    <ComboBox ItemsSource="{Binding SearchModules.Modules}" Margin="5,0" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          SelectedValue="{Binding SearchModules.SecondaryModule}" DisplayMemberPath="ModuleName"
                          materialDesign:HintAssist.Hint="备用歌曲搜索引擎"/>
                </StackPanel>
            </Grid>

            <!-- 播放设备开始 -->
            <Grid Grid.Row="1" Grid.Column="0" DataContext="{Binding Player}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <ComboBox Width="110" ItemsSource="{Binding Source={local:Enumeration {x:Type local:PlayerType}}}"
                          SelectedValue="{Binding PlayerType}" DisplayMemberPath="Description" SelectedValuePath="Value"
                          materialDesign:HintAssist.Hint="播放引擎"/>
                <ComboBox Width="300" materialDesign:HintAssist.Hint="WaveoutEvent 播放设备" Grid.Column="1"
                          Visibility="{Binding PlayerType,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={x:Static local:PlayerType.WaveOutEvent}}"
                          ItemsSource="{Binding Source={x:Static local:Utilities.WaveoutEventDevices}}"
                          SelectedValue="{Binding WaveoutEventDevice}" DisplayMemberPath="Name" SelectedValuePath="Id"/>
                <ComboBox Width="300" materialDesign:HintAssist.Hint="DirectSound 播放设备" Grid.Column="1"
                          Visibility="{Binding PlayerType,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={x:Static local:PlayerType.DirectSound}}"
                          ItemsSource="{Binding Source={x:Static naudiowave:DirectSoundOut.Devices}}"
                          SelectedValue="{Binding DirectSoundDevice}" DisplayMemberPath="Description" SelectedValuePath="Guid"/>
            </Grid>
            <!-- 播放设备结束 -->

            <!-- 下载状态开始 -->
            <Grid Grid.Row="1" Grid.Column="1" DataContext="{Binding Downloader}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="1" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center"
                       Visibility="{Binding DownloadPercentage,Converter={StaticResource NotEqualsVisibilityConverter},ConverterParameter={StaticResource Zero}}">
                    缓存歌曲中
                    <LineBreak/>
                    <TextBlock Text="{Binding DownloadSpeed,StringFormat=0.## KiB/s}"/>
                </TextBlock>
                <materialDesign:Card Grid.Column="2" Margin="10,0" UniformCornerRadius="14" Padding="4" VerticalAlignment="Center" HorizontalAlignment="Center"
                                 Visibility="{Binding DownloadPercentage,Converter={StaticResource NotEqualsVisibilityConverter},ConverterParameter={StaticResource Zero}}">
                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" Value="50" IsIndeterminate="True"/>
                </materialDesign:Card>

                <TextBlock Grid.Column="1" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center"
                       Visibility="{Binding IsModuleDownloading,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource True}}">
                    缓存歌曲中
                </TextBlock>
                <materialDesign:Card Grid.Column="2" Margin="10,0" UniformCornerRadius="14" Padding="4" VerticalAlignment="Center" HorizontalAlignment="Center"
                                 Visibility="{Binding IsModuleDownloading,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource True}}">
                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" Value="0" IsIndeterminate="True"/>
                </materialDesign:Card>
            </Grid>
            <!-- 下载状态结束 -->

            <!-- 播放器 Grid 开始 -->
            <Grid Grid.Row="2" Grid.ColumnSpan="2" DataContext="{Binding Player}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <StackPanel Margin="20 0" HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal">
                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding PlayPauseCommand}" Cursor="Hand">
                        <Grid>
                            <materialDesign:PackIcon Width="24" Height="24" Kind="Play"
                                                 Visibility="{Binding IsPlaying,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource False}}"/>
                            <materialDesign:PackIcon Width="24" Height="24" Kind="Pause"
                                                 Visibility="{Binding IsPlaying,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource True}}"/>
                        </Grid>
                    </Button>
                    <Button Margin="8 0" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding NextCommand}" Cursor="Hand">
                        <materialDesign:PackIcon Width="24" Height="24" Kind="SkipNext"/>
                    </Button>
                    <TextBlock FontSize="24" TextAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Width="80" Text="{Binding CurrentTimeString, Mode=OneWay}" TextAlignment="Right"/>
                    /
                    <TextBlock Width="80" Text="{Binding TotalTimeString, Mode=OneWay}" TextAlignment="Left"/>
                </TextBlock>
                    <Grid Name="VolumeGroup" MouseDown="VolumeGroup_MouseDown" Background="Transparent" Cursor="Hand">
                        <materialDesign:PackIcon x:Name="PackIconVolumeHigh"
                                             Visibility="{Binding IsMute,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource FalseValue}}"
                                             Width="24" Height="24" Kind="VolumeHigh" VerticalAlignment="Center" Margin="15,10,0,0"/>
                        <materialDesign:PackIcon x:Name="PackIconVolumeMute" 
                                             Visibility="{Binding IsMute,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource TrueValue}}"
                                             Width="24" Height="24" Kind="VolumeOff" VerticalAlignment="Center" Margin="15,10,0,0"/>
                    </Grid>
                    <Slider Style="{StaticResource MaterialDesignDiscreteSlider}" Value="{Binding Volume,Converter={StaticResource PlayerVolumeConverter}}"
                        Width="150" Orientation="Horizontal" Minimum="0" Maximum="100" LargeChange="5" VerticalAlignment="Center"/>
                    <!-- 设置开始 -->
                    <materialDesign:PopupBox Margin="30,0,0,0" DataContext="{Binding ElementName=DGJRootWindow,Path=DataContext}"
                                             StaysOpen="True" PlacementMode="TopAndAlignCentres">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon Width="24" Height="24" Kind="Settings"/>
                        </materialDesign:PopupBox.ToggleContent>
                        <Grid Margin="8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}" Margin="8,0,8,8">设置</TextBlock>

                            <StackPanel Margin="5,0" Orientation="Vertical" Grid.Row="1">
                                <!--播放设置开始-->
                                <StackPanel Margin="0,5,0,0">
                                    <StackPanel  Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="PlayCircleOutline" Width="18" Height="16"/>
                                        <TextBlock Text="播放" FontWeight="Bold" FontSize="12" Foreground="#696969" HorizontalAlignment="Left" />
                                    </StackPanel>
                                <StackPanel Margin="5" Orientation="Horizontal">
                                    <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding Player.IsPlaylistEnabled}"/>
                                    <TextBlock TextAlignment="Center" VerticalAlignment="Center">没有点歌时从列表[随机]播放</TextBlock>
                                </StackPanel>
                                <StackPanel Margin="5" Orientation="Horizontal" Visibility="{Binding Player.IsPlaylistEnabled,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource True}}">
                                        <Button Style="{StaticResource MaterialDesignToolButton}" Command="{Binding Player.ChangePlayModeCommand}">
                                            <Grid>
                                                <!--MaterialDesignFloatingActionMiniButton-->
                                                <materialDesign:PackIcon Width="24" Height="24" Kind="ShuffleVariant"
                                                 Visibility="{Binding Player.CurrentPlayMode,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={x:Static local:PlayMode.ShufflePlay}}"/>
                                                <materialDesign:PackIcon Width="24" Height="24" Kind="Repeat"
                                                 Visibility="{Binding Player.CurrentPlayMode,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={x:Static local:PlayMode.LooptListPlay}}"/>
                                                <!--<materialDesign:PackIcon Width="24" Height="24" Kind="PlaylistPlay"
                                                 Visibility="{Binding Player.CurrentPlayMode,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={x:Static local:PlayMode.ListPlay}}"/>-->
                                                <materialDesign:PackIcon Width="24" Height="24" Kind="RepeatOnce"
                                                 Visibility="{Binding Player.CurrentPlayMode,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={x:Static local:PlayMode.LoopOnetPlay}}"/>
                                            </Grid>
                                        </Button>
                                        <TextBlock Margin="0,5,0,0" Text="播放模式"/>
                                    </StackPanel>
                                    <StackPanel Margin="5" Orientation="Horizontal">
                                    <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding Player.IsUserPrior}"/>
                                    <TextBlock TextAlignment="Center" VerticalAlignment="Center">用户点歌优先于空闲歌单播放</TextBlock>
                                </StackPanel>
                                </StackPanel>
                                <!--播放设置结束-->
                                
                                <!--消息队列设置开始-->
                                <StackPanel Margin="0,5,0,0">
                                    <StackPanel  Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Bell" Width="18" Height="16"/>
                                        <TextBlock Text="消息输出" FontWeight="Bold" FontSize="12" Foreground="#696969" HorizontalAlignment="Left" />
                                    </StackPanel>
                                    <Grid Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Margin="5" Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                                            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding Writer.EnableQueueMsg}"/>
                                            <TextBlock TextAlignment="Center" VerticalAlignment="Center">输出通知消息</TextBlock>
                                        </StackPanel>
                                        <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" Grid.Row="0" Grid.Column="1"
                                    Visibility="{Binding Writer.EnableQueueMsg,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource TrueValue}}"
                                    Text="{Binding Writer.QueueMsgMaxStayTime,UpdateSourceTrigger=PropertyChanged,Delay=200}"
                                    materialDesign:HintAssist.Hint="每条消息的驻留时间(秒)" materialDesign:HintAssist.IsFloating="True"/>
                                        <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="25,0,0,0"
                                    Visibility="{Binding Writer.EnableQueueMsg,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource TrueValue}}"
                                    Text="{Binding Writer.MsgLineLength,UpdateSourceTrigger=PropertyChanged,Delay=200}"
                                    materialDesign:HintAssist.Hint="单行长度（字数）" materialDesign:HintAssist.IsFloating="True"/>
                                        <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="25,0,0,0"
                                    Visibility="{Binding Writer.EnableQueueMsg,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource TrueValue}}"
                                    Text="{Binding Writer.MsgContainerMaxSize,UpdateSourceTrigger=PropertyChanged,Delay=200}"
                                    materialDesign:HintAssist.Hint="消息容器的大小（最多显示多少条通知）" materialDesign:HintAssist.IsFloating="True"/>
                                        <StackPanel Margin="5" Orientation="Horizontal"  Grid.Row="3" Grid.Column="0">
                                            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding Writer.EnableKeepLastQueueMsg}"
                                                          Visibility="{Binding Writer.EnableQueueMsg,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource TrueValue}}"/>
                                            <TextBlock TextAlignment="Center" VerticalAlignment="Center">保留最后的消息</TextBlock>
                                        </StackPanel>
                                        <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" Grid.Row="3" Grid.Column="1"
                                    Visibility="{Binding Writer.IsVisibleForKeepQueueMsgCountCtrl,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource TrueValue}}"
                                    
                                    Text="{Binding Writer.KeepQueueMsgCount,UpdateSourceTrigger=PropertyChanged,Delay=200}"
                                    materialDesign:HintAssist.Hint="保留最后的消息数量" materialDesign:HintAssist.IsFloating="True"/>
                                        <Grid Margin="25,0,0,0" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Margin="0,15,10,0" Style="{StaticResource MaterialDesignTextBox}" VerticalAlignment="Center" Grid.Row="4" Grid.Column="0"
                                               MaxWidth="250"  Text="{Binding Writer.MsgQueueTestText,Mode=TwoWay,Delay=200}"
                                 materialDesign:HintAssist.Hint="输入测试文本" >
                                            </TextBox>
                                            <Button Margin="0,15,0,0" Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding MsgQueueTestCommand}"  Grid.Row="4" Grid.Column="1">测试</Button>
                                            <Button Margin="0,15,0,0" Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding ClearMsgQueueCommand}"  Grid.Row="4" Grid.Column="2">清空消息队列</Button>
                                        </Grid>
                                    </Grid>
                                </StackPanel>
                                <!--消息队列设置结束-->

                                <!--点歌设置开始-->
                                <StackPanel Margin="0,5,0,0">
                                    <StackPanel  Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Fire" Width="18" Height="16"/>
                                        <TextBlock Text="点歌" FontWeight="Bold" FontSize="12" Foreground="#696969" HorizontalAlignment="Left" />
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Margin="5">
                                        <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    Text="{Binding DanmuHandler.MaxTotalSongNum,UpdateSourceTrigger=PropertyChanged,Delay=200}"
                                    materialDesign:HintAssist.Hint="总共最大点歌数量" materialDesign:HintAssist.IsFloating="True"/>
                                        <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    Text="{Binding DanmuHandler.MaxPersonSongNum,UpdateSourceTrigger=PropertyChanged,Delay=200}"
                                    materialDesign:HintAssist.Hint="单人最大点歌数量" materialDesign:HintAssist.IsFloating="True"/>
                                        <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    Text="{Binding LogDanmakuLengthLimit,UpdateSourceTrigger=PropertyChanged,Delay=200}"
                                    materialDesign:HintAssist.Hint="弹幕长度限制" materialDesign:HintAssist.IsFloating="True"/>
                                    </StackPanel>
                                </StackPanel>
                                <!--点歌设置结束-->
                                
                                <!--杂项设置开始-->
                                <StackPanel Margin="0,5,0,0">
                                    <StackPanel  Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Collage" Width="18" Height="16"/>
                                        <TextBlock Text="杂项" FontWeight="Bold"  FontSize="12" Foreground="#696969" HorizontalAlignment="Left" />
                                    </StackPanel>
                                    <StackPanel Margin="5" Orientation="Horizontal">
                                        <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding IsLogRedirectDanmaku}" x:Name="LogRedirectToggleButton" Checked="LogRedirectToggleButton_OnChecked"/>
                                        <TextBlock TextAlignment="Center" VerticalAlignment="Center">点歌反馈发送到弹幕（需要登录中心）</TextBlock>
                                    </StackPanel>
                                    <StackPanel Margin="5" Orientation="Horizontal">
                                        <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding DanmuHandler.AdminCmdEnable}"/>
                                        <TextBlock TextAlignment="Center" VerticalAlignment="Center">开启执行房管的弹幕命令</TextBlock>
                                    </StackPanel>
                                    <StackPanel Margin="5" Orientation="Horizontal">
                                        <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding FormatConfig}"/>
                                        <TextBlock TextAlignment="Center" VerticalAlignment="Center">保存配置时格式化内容</TextBlock>
                                    </StackPanel>
                                </StackPanel>    
                                <!--杂项设置结束-->  
                            </StackPanel>
                        </Grid>
                    </materialDesign:PopupBox>
                    <!-- 设置结束 -->
                    <!-- 歌曲黑名单开始 -->
                    <materialDesign:PopupBox StaysOpen="True" PlacementMode="TopAndAlignCentres" Margin="8,0"
                                             DataContext="{Binding ElementName=DGJRootWindow,Path=DataContext}">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon Width="24" Height="24" Kind="FilterRemove"/>
                        </materialDesign:PopupBox.ToggleContent>
                        <Grid Margin="8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}" Margin="8,0,8,8">歌曲黑名单</TextBlock>
                            <ListView ItemsSource="{Binding Blacklist}" Grid.Row="1" MinHeight="200" MinWidth="300" MaxHeight="350">
                                <!--
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="移除" Command="{Binding RemoveBlacklistInfoCommmand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                                        <MenuItem Header="清空全部" Command="{Binding ClearBlacklistCommand}"/>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                                -->
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridViewColumn Header="">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="删除" Style="{StaticResource MaterialDesignFlatButton}" Margin="0"
                                                            Command="{Binding ElementName=DGJRootWindow,Path=DataContext.RemoveBlacklistInfoCommmand}"
                                                            CommandParameter="{Binding}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="类型">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextAlignment="Center" Margin="0,8" Text="{Binding BlackType,Converter={StaticResource BlackListTypeStringConverter}}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="内容">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextAlignment="Center" Margin="0,8" Text="{Binding Content}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="2">
                                <Button HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    materialDesign:DialogHost.DialogClosingAttached="DialogAddBlacklist">
                                    <Button.CommandParameter>
                                        <StackPanel Margin="16">
                                            <TextBlock FontSize="16">添加黑名单</TextBlock>
                                            <ComboBox Width="120" ItemsSource="{Binding Source={local:Enumeration {x:Type local:BlackListType}}}"
                                                DisplayMemberPath="Description" SelectedValuePath="Value" x:Name="AddBlacklistComboBox"
                                                materialDesign:HintAssist.Hint="黑名单类型" materialDesign:HintAssist.IsFloating="True"/>
                                            <TextBox x:Name="AddBlacklistTextBox" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="黑名单内容" materialDesign:HintAssist.IsFloating="True"/>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Button Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True"
                                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                                    CommandParameter="{StaticResource True}"
                                                    HorizontalAlignment="Center">
                                                    确定
                                                </Button>
                                                <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True"
                                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                                    CommandParameter="{StaticResource False}"
                                                    HorizontalAlignment="Center">
                                                    取消
                                                </Button>
                                            </StackPanel>
                                        </StackPanel>
                                    </Button.CommandParameter>
                                    新建黑名单
                                </Button>
                            </StackPanel>
                        </Grid>
                    </materialDesign:PopupBox>
                    <!-- 歌曲黑名单结束 -->
                    <!-- 文本输出开始 -->
                    <materialDesign:PopupBox StaysOpen="True"  PlacementMode="TopAndAlignCentres"
                                             DataContext="{Binding ElementName=DGJRootWindow,Path=DataContext}">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon Width="24" Height="24" Kind="FileDocument"/>
                        </materialDesign:PopupBox.ToggleContent>
                        <Grid Margin="8" Width="900" Height="500">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--
                            <TextBlock Grid.ColumnSpan="2">文本输出设置</TextBlock>
                            -->
                            <!--输出信息模板文件名称列表开始-->
                            <Grid  Grid.Column="0" Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Grid.Row="0" Margin="0,0,0,0"  materialDesign:HintAssist.Hint="在这里输入模板文件名称"  Height="30" x:Name="AddOutputInfoTextBox" Style="{StaticResource MaterialDesignTextBox}"></TextBox>
                                <Button  Click="AddOutputInfo_Click" Grid.Column="1" Grid.Row="0" Margin="10,10,10,10" Width="30" Height="30" Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                                    <materialDesign:PackIcon Kind="Plus"/>
                                </Button>
                                <ListView Name="list_OutputInfo" ItemContainerStyle="{StaticResource list_OutputInfo_itemstyle}" PreviewMouseDown="list_OutputInfo_PreviewMouseDown" 
                                          MinWidth="100" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" ItemsSource="{Binding InfoTemplates}" SelectionChanged="list_OutputInfo_SelectionChanged">
                                    <ListView.View>
                                        <GridView AllowsColumnReorder="False">
                                            <GridViewColumn Header="">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ToggleButton  IsChecked="{Binding Value.IsEnable}" Style="{DynamicResource MaterialDesignSwitchToggleButton}" Margin="0,7,0,0"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="文件名称">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <TextBox TextAlignment="Center" Style="{StaticResource MaterialDesignTextBox}" Margin="0,8" Text="{Binding Key,Mode=TwoWay}" Visibility="{Binding Editing,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource TrueValue}}"/>
                                                            <TextBlock TextAlignment="Center" Margin="0,8" Text="{Binding Key,Mode=OneWay}" Visibility="{Binding Editing,Mode=OneWay,Converter={StaticResource EqualsVisibilityConverter},ConverterParameter={StaticResource FalseValue}}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="删除">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Button  Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                        materialDesign:DialogHost.DialogClosingAttached="DialogRemoveOutputInfo">
                                                            <materialDesign:PackIcon Kind="Delete"/>
                                                            <Button.CommandParameter>
                                                                <StackPanel Margin="16">
                                                                    <TextBlock FontSize="20">确定删除吗</TextBlock>
                                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                                        <Button Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="{Binding Key}"
                                    HorizontalAlignment="Center">
                                                                            确定
                                                                        </Button>
                                                                        <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="{StaticResource False}"
                                    HorizontalAlignment="Center">
                                                                            取消
                                                                        </Button>
                                                                    </StackPanel>
                                                                </StackPanel>
                                                            </Button.CommandParameter>
                                                        </Button>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <!--<GridViewColumn Header="内容">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextAlignment="Center" Margin="0,8" Text="{Binding Value}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>-->
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>
                            <!--输出信息模板文件名称列表结束-->
                            <TextBox Text="{Binding Writer.CurrentOutputInfo.Content,Mode=TwoWay,Delay=150,UpdateSourceTrigger=PropertyChanged}"
                                     IsEnabled="{Binding Writer.CurrentOutputInfo, Converter={StaticResource IsNullToBooleanConverter},ConverterParameter={StaticResource FalseValue}}"
                                     TextAlignment="Left" VerticalAlignment="Stretch" Grid.Row="0" Grid.Column="1" ContextMenu="{x:Null}"
                                     Style="{StaticResource MaterialDesignTextAreaTextBox}" materialDesign:HintAssist.Hint="模板   不会改请保持默认"
                                     TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" SpellCheck.IsEnabled="False"/>
                            <TextBox Text="{Binding Writer.Result,Mode=OneWay}" IsEnabled="False" TextAlignment="Left"
                                     VerticalAlignment="Stretch" Grid.Row="0" Grid.Column="2"
                                     Style="{StaticResource MaterialDesignTextAreaTextBox}" materialDesign:HintAssist.Hint="输出预览"
                                     TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" SpellCheck.IsEnabled="False"/>
                        </Grid>
                    </materialDesign:PopupBox>
                    <!-- 文本输出结束 -->

                    <!--<Button Style="{StaticResource MaterialDesignRaisedLightButton}" Command="{Binding RefreshConfigCommand}">
                        <Grid>
                            <materialDesign:PackIcon Width="24" Height="24" Kind="Refresh"/>
                        </Grid>
                    </Button>-->

                </StackPanel>

                <!-- 播放器进度条 -->
                <Slider Margin="15,0" Grid.Row="1" Value="{Binding CurrentTimeDouble}" Minimum="0"
                        Maximum="{Binding TotalTime.TotalSeconds}" SmallChange="0.5" LargeChange="3" VerticalAlignment="Center"/>

            </Grid>
            <!-- 播放器 Grid 结束 -->

        </Grid>
    </materialDesign:DialogHost>
</Window>
