name: Build and Publish 2

on:
  push:
    branches:
      - bate
  workflow_dispatch:
  
jobs:
  build:
    runs-on: windows-latest
    
    steps:
      
      - name: Set the value
        id: step_one
        run: |
         echo "action_state=yellow" >> $env:GITHUB_ENV
      - name: Use the value
        id: step_two
        run: |
          echo $env:action_state # This will output 'yellow'
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
          
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Print Log Message
        run: echo "This is a log message."
        
      #- name: Setup .NET
      #  uses: actions/setup-dotnet@v3
      #  with:
      #    dotnet-version: '7.0.x'
      - name: Set APPVEYOR_BUILD_VERSION environ
        run: |
          echo "APPVEYOR_BUILD_VERSION=$(cat VERSION)" >> $env:GITHUB_ENV
          echo $env:APPVEYOR_BUILD_VERSION
          
      - name: Get version
        id: get_version
        run:  |
          # MAJOR=$(cat VERSION.txt | cut -d . -f 1)
          # MINOR=$(cat VERSION.txt | cut -d . -f 2)
          # PATCH=$(cat VERSION.txt | cut -d . -f 3)
          VERSION="$(cat VERSION)"
          echo "::set-output name=version::${VERSION}"

      - name: Use APPVEYOR_BUILD_VERSION environ
        run: echo $env:APPVEYOR_BUILD_VERSION
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN : ${{secrets.GITHUB_TOKEN}}
        with:
          #token: ${{ secrets.Releases }}
          #tag_name: v1.0.0
          #release_name: Release 1.0.0
          #draft: false
          #prerelease: false
          tag_name: V${{ needs.get_version.outputs.version }}
          release_name: V${{ needs.get_version.outputs.version }}
          body: Auto-generated prerelease build
          draft: false
          prerelease: false
      
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.3.1
          
      #- name: Setup MSBuild Path
      #  uses: warrenbuckley/Setup-MSBuild@v1
      
      - name: Clean project
        run: msbuild /t:Clean
        
      #- name: Clear NuGet cache
      #  run: dotnet nuget locals all --clear

      #- name: Restore dependencies
      #  run: dotnet restore
      #  working-directory: /packages
            
      - name: Restore NuGet
        #run: dotnet restore
        run: nuget restore DGJv3.sln
              
      - name: Build project
        run: msbuild DGJv3.sln /p:Configuration=Release

      #- name: Publish
      #  run: dotnet publish --configuration Release --output publish

      - name: Upload Release Asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN : ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./DGJv3/bin/Release/DGJv3.dll
          asset_name: DGJv3.dll
          asset_content_type: application/octet-stream
